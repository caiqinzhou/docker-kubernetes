#
# Dockerfile - Google Kubernetes
#
# - Build
# docker build --rm -t kubernetes:master -f 02_kubernetes-master .
#
# - Run
# docker run -d --name="kubernetes-master" -h "kubernetes-master" kubernetes:master
#
# - SSH
# ssh `docker inspect -f '{{ .NetworkSettings.IPAddress }}' kubernetes-master`

# Use the base images
FROM ubuntu:14.04
MAINTAINER Yongbok Kim <ruo91@yongbok.net>

# Change the repository
RUN sed -i 's/archive.ubuntu.com/kr.archive.ubuntu.com/g' /etc/apt/sources.list

# The last update and install package for docker
RUN apt-get update && apt-get install -y supervisor openssh-server nano tmux

# Variable
ENV SRC_DIR /opt
WORKDIR $SRC_DIR

# Google - Kubernetes
ENV KUBERNETES_HOME $SRC_DIR/kubernetes
ENV PATH $PATH:$KUBERNETES_HOME/server/bin
ADD kubernetes-server-linux-amd64.tar.gz $SRC_DIR
RUN echo '# Kubernetes' >> /etc/profile \
 && echo "export KUBERNETES_HOME=$KUBERNETES_HOME" >> /etc/profile \
 && echo 'export PATH=$PATH:$KUBERNETES_HOME/server/bin' >> /etc/profile \
 && echo '' >> /etc/profile

# Kubernetes scripts
ENV KUBELET_PORT 10250
ENV KUBERNETES_MASTER kubernetes-master
ENV KUBERNETES_MASTER_PORT 8080
ENV DOCKER_CIDR 10.0.42.1/16
ENV ETCD_SERVER http://etcd-cluster-0:4001,http://etcd-cluster-1:4001,http://etcd-cluster-2:4001

# - API Server
ENV API_ADDRESS 0.0.0.0
ENV API_SERVER_PORT 8080
ENV API_SERVER_SCRIPTS /opt/api-server.sh
RUN echo '#!/bin/bash' > $API_SERVER_SCRIPTS \
 && echo "kube-apiserver \\" >> $API_SERVER_SCRIPTS \
 && echo "--port=$API_SERVER_PORT \\" >> $API_SERVER_SCRIPTS \
 && echo "--address=$API_ADDRESS \\" >> $API_SERVER_SCRIPTS \
 && echo "--kubelet_port=$KUBELET_PORT \\" >> $API_SERVER_SCRIPTS \
 && echo "--portal_net=\"$DOCKER_CIDR\" \\" >> $API_SERVER_SCRIPTS \
 && echo "--etcd_servers=$ETCD_SERVER" >> $API_SERVER_SCRIPTS \
 && chmod a+x $API_SERVER_SCRIPTS

# - Scheduler
ENV SCHEDULER_PORT 10251
ENV SCHEDULER_ADDRESS 0.0.0.0 
ENV SCHEDULER_SCRIPTS /opt/scheduler.sh
RUN echo '#!/bin/bash' > $SCHEDULER_SCRIPTS \
 && echo "KUBERNETES_MASTER_PORT=$KUBERNETES_MASTER_PORT \\" >> $SCHEDULER_SCRIPTS \
 && echo "kube-scheduler \\" >> $SCHEDULER_SCRIPTS \
 && echo "--address=$SCHEDULER_ADDRESS \\" >> $SCHEDULER_SCRIPTS \
 && echo "--port=$SCHEDULER_PORT \\" >> $SCHEDULER_SCRIPTS \
 && echo '--master=`ifconfig eth0 | grep 'inet addr:' | cut -d: -f2 | awk '{ print $1}'`:$KUBERNETES_MASTER_PORT' >> $SCHEDULER_SCRIPTS \
 && chmod a+x $SCHEDULER_SCRIPTS

# - Controller Manager (Replication Controller)
ENV CM_ADDRESS 0.0.0.0
ENV CM_MACHINES kubernetes-minion-0,kubernetes-minion-1
ENV CM_SCRIPTS /opt/controller-manager.sh
RUN echo '#!/bin/bash' >> $CM_SCRIPTS \
 && echo "KUBERNETES_MASTER_PORT=$KUBERNETES_MASTER_PORT \\" >> $CM_SCRIPTS \
 && echo "kube-controller-manager \\" >> $CM_SCRIPTS \
 && echo "--address=$CM_ADDRESS \\" >> $CM_SCRIPTS \
 && echo "--kubelet_port=$KUBELET_PORT \\" >> $CM_SCRIPTS \
 && echo '--master=`ifconfig eth0 | grep 'inet addr:' | cut -d: -f2 | awk '{ print $1}'`:$KUBERNETES_MASTER_PORT \' >> $CM_SCRIPTS \
 && echo "--machines=$CM_MACHINES" >> $CM_SCRIPTS \
 && chmod a+x $CM_SCRIPTS

# Supervisor
RUN mkdir -p /var/log/supervisor
ADD conf/supervisord.conf /etc/supervisor/conf.d/supervisord.conf

# SSH
RUN mkdir /var/run/sshd
RUN sed -i 's/without-password/yes/g' /etc/ssh/sshd_config
RUN sed -i 's/UsePAM yes/UsePAM no/g' /etc/ssh/sshd_config
RUN sed -i 's/\#AuthorizedKeysFile/AuthorizedKeysFile/g' /etc/ssh/sshd_config

# Set the root password for ssh
RUN echo 'root:kubernetes' |chpasswd

# Port
EXPOSE 22 8080 

# Daemon
CMD ["/usr/bin/supervisord"]